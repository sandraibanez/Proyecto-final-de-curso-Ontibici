# STAGE 1
FROM node:19-alpine as installer
WORKDIR /app
COPY ./package.json ./package.json
RUN ["npm", "install"]

#STAGE 2
FROM node:19-alpine
WORKDIR /app
COPY --from=installer /app/node_modules ./node_modules
COPY . .
EXPOSE 3000
CMD ["npm", "run", "start"]

# #STAGE 1
# FROM node:lts-slim as builder
# WORKDIR /app
# COPY ./package.json ./package.json
# # RUN ["npm", "install"]
# # COPY --from=installer /app/node_modules ./node_modules
# COPY package.json package-lock.json ./
# RUN npm install && mkdir /react-frontend && mv ./node_modules ./react-frontend
# COPY . .
# # RUN npm run build
# CMD ["npm", "run", "start"]

# # Dockerfile para el servicio de loadbalancer de Nginx

# # Usa la imagen oficial de Nginx como base
# FROM nginx:latest

# # Copia el archivo de configuraci√≥n nginx.conf al contenedor
# COPY loadbalancer/nginx.conf /etc/nginx/nginx.conf

# # Configura el primer comando para iniciar Nginx sin ejecutarlo en segundo plano
# CMD ["nginx", "-g", "daemon off;"]